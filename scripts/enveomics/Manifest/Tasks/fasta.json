{
  "tasks": [
    {
      "task": "FastA.N50.pl",
      "description": ["Calculates the N50 value of a set of sequences.",
        "Alternatively, it can calculate other N** values. It also calculates",
        "the total number of sequences and the total added length."],
      "help_arg": "",
      "see_also": ["FastA.length.pl"],
      "options": [
        {
          "name": "Sequences",
          "arg": "in_file",
          "mandatory": true,
          "description": "A FastA file containing the sequences."
        },
        {
          "name": "Minimum length",
          "arg": "integer",
          "description": "Minimum length to take into consideration.",
          "default": 0
        },
        {
          "name": "NXX",
          "arg": "integer",
          "description": "Value NXX to calculate.",
          "default": 50
        }
      ]
    },
    {
      "task": "FastA.filter.pl",
      "description": "Extracts a subset of sequences from a FastA file.",
      "help_arg": "-h",
      "see_also": ["FastQ.filter.pl"],
      "options": [
        {
          "opt": "-r",
          "description": ["Reverse list. Extracts sequences NOT present in the",
            "list."]
        },
        {
          "opt": "-q",
          "description": "Runs quietly."
        },
        {
          "name": "List",
          "arg": "in_file",
          "mandatory": true,
          "description": "List of sequences to extract."
        },
        {
          "name": "Sequences",
          "arg": "in_file",
          "mandatory": true,
          "description": "FastA file containing the superset of sequences."
        },
        ">",
        {
          "name": "Subset",
          "arg": "out_file",
          "mandatory": true,
          "description": "FastA file to be created."
        }
      ]
    },
    {
      "task": "FastA.filterLen.pl",
      "description": "Filters a multi-FastA file by length.",
      "requires": [ { "perl_lib": "Bio::SeqIO" } ],
      "cite": [["Stajich et al, 2002, GRes",
        "http://dx.doi.org/10.1101/gr.361602"]],
      "help_arg": "",
      "options": [
        {
          "arg": "in_file",
          "mandatory": true,
          "description": "Input FastA file."
        },
        {
          "name": "Minimum length",
          "arg": "integer",
          "mandatory": true,
          "description": "Minimum length to report a sequence."
        },
        ">",
        {
          "arg": "out_file",
          "mandatory": true,
          "description": "Filtered FastA file."
        }
      ]
    },
    {
      "task": "FastA.filterN.pl",
      "description": ["Filter sequences by N-content and presence of long",
        "homopolymers."],
      "help_arg": "",
      "options": [
        {
          "name": "Sequences",
          "arg": "in_file",
          "mandatory": true,
          "description": "Input file in FastA format."
        },
        {
          "name": "Content",
          "arg": "float",
          "default": 0.5,
          "mandatory": true,
          "description": ["A number between 0 and 1 indicating the maximum",
            "proportion of Ns (1 to turn off, 0.5 by default)."]
        },
        {
          "name": "Stretch",
          "arg": "integer",
          "default": 100,
          "description": ["A number indicating the maximum number of",
            "consecutive identical nucleotides allowed (0 to turn off, 100 by",
            "default)."]
        },
        ">",
        {
          "name": "Filtered",
          "arg": "out_file",
          "mandatory": true,
          "description": "Filtered set of sequences."
        }
      ]
    },
    {
      "task": "FastA.gc.pl",
      "description": "Estimates the G+C content of sequences.",
      "help_arg": "",
      "options": [
        {
          "name": "seqs.fa",
          "arg": "in_file",
          "multiple_sep": " ",
          "mandatory": true,
          "description": "One or more FastA files."
        },
        ">",
        {
          "name": "gc.txt",
          "arg": "out_file",
          "mandatory": true,
          "description": "A table with the G+C content of the sequences."
        }
      ]
    },
    {
      "task": "FastA.interpose.pl",
      "description": ["Interpose sequences in FastA format from two files into",
        "one output file. If more than two files are provided, the script will",
        "interpose all the input files."],
      "see_also": ["FastA.split.rb","FastQ.interpose.pl"],
      "warn": ["Please note that this script will check for the consistency of",
        "the names (assuming a pair of related reads contains the same name",
        "varying only in a trailing slash (/) followed by a digit. If you want",
        "to turn this feature off just set the $eval_T variable to zero. If",
        "you want to decrease the sampling period (to speed the script up) or",
        "increase it (to make it more sensitive to errors) just change $eval_T",
        "accordingly."],
      "help_arg": "",
      "options": [
        {
          "arg": "out_file",
          "mandatory": true,
          "description": "Output FastA file."
        },
        {
          "name": "Input FastA 1",
          "arg": "in_file",
          "mandatory": true,
          "description": "First FastA file."
        },
        {
          "name": "Input FastA 2",
          "arg": "in_file",
          "mandatory": true,
          "description": "Second FastA file."
        },
        {
          "name": "Additional FastA",
          "arg": "in_file",
          "multiple_sep": " ",
          "description": "Any additional FastA files (or none)."
        }
      ]
    },
    {
      "task": "FastA.length.pl",
      "description": "Returns the length of sequences in (multi-)FastA.",
      "see_also": ["FastA.N50.pl"],
      "help_arg": "",
      "options": [
        {
          "arg": "in_file",
          "multiple_sep": " ",
          "mandatory": true,
          "description": "One or more FastA files."
        },
        ">",
        {
          "arg": "out_file",
          "mandatory": true,
          "description": "A table with the lengths of the sequences."
        }
      ]
    },
    {
      "task": "FastA.qlen.pl",
      "description": ["Calculates the quartiles of the length in a set of",
        "sequences. The Q2 is also known as the median. Q0 is the minimum",
        "length, and Q4 is the maximum length. It also calculates TOTAL, the",
        "added length of the sequences in the file, and AVG, the average",
        "length."],
      "help_arg": "",
      "options": [
        {
          "name": "Sequences",
          "arg": "in_file",
          "mandatory": true,
          "description": "A FastA file containing the sequences."
        },
        {
          "name": "Minimum Length",
          "arg": "integer",
          "default": 0,
          "description": "The minimum length to take into consideration."
        }
      ]
    },
    {
      "task": "FastA.rename.pl",
      "description": "Renames a set of sequences in FastA format.",
      "help_arg": "-h",
      "options": [
        {
          "name": "Filter list",
          "opt": "-f",
          "description": "Ignore sequences NOT present in the list."
        },
        {
          "name": "Quiet",
          "opt": "-q",
          "description": "Runs quietly."
        },
        {
          "name": "List.txt",
          "arg": "in_file",
          "mandatory": true,
          "description": ["Tab-delimited list of sequences, with the original",
            "ID in the first column and the ID to use in the second."]
        },
        {
          "name": "Seqs.fa",
          "arg": "in_file",
          "mandatory": true,
          "description": "FastA file containing the superset of sequences."
        },
        ">",
        {
          "name": "Renamed.fa",
          "arg": "out_file",
          "mandatory": true,
          "description": "FastA file to be created."
        }
      ]
    },
    {
      "task": "FastA.revcom.pl",
      "description": "Reverse-complement sequences in FastA format.",
      "requires": [ { "perl_lib": "Bio::SeqIO" } ],
      "cite": [["Stajich et al, 2002, GRes",
        "http://dx.doi.org/10.1101/gr.361602"]],
      "help_arg": "--help",
      "options": [
        "<",
        {
          "arg": "in_file",
          "mandatory": true,
          "description": "Input file in FastA format."
        },
        ">",
        {
          "arg": "out_file",
          "mandatory": true,
          "description": "Output file in FastA format."
        }
      ]
    },
    {
      "task": "FastA.slider.pl",
      "description": "Slices sequences in fixed- or variable-length windows.",
      "help_arg": "-help",
      "options": [
        {
          "opt": "-seq",
          "arg": "in_file",
          "mandatory": true,
          "description": "Input file in FastA format."
        },
        {
          "opt": "-out",
          "arg": "out_file",
          "mandatory": true,
          "description": "Output file in FastA format."
        },
        {
          "opt": "-win",
          "arg": "integer",
          "default": 18,
          "description": "Window size."
        },
        {
          "opt": "-step",
          "arg": "integer",
          "default": 1,
          "description": "Step size."
        },
        {
          "name": "Length error",
          "opt": "-lerr",
          "arg": "integer",
          "default": 2,
          "description": "Expected error in chunks length."
        },
        {
          "opt": "-comm",
          "arg": "select",
          "values": [0,1],
          "default": 0,
          "description": ["Generate FastA comments (leaded by semi-colon) to",
            "separate input sequences. Set to 0 for no-comments, to 1 for",
            "comments."]
        },
        {
          "opt": "-short",
          "arg": "select",
          "values": [0,1],
          "default": 0,
          "description": ["Use chunks shorter than the window size 'as is'.",
            "Set to 0 to discard those chunks, to 1 to use them."]
        }
      ]
    },
    {
      "task": "FastA.split.rb",
      "description": ["Evenly splits a multi-FastA file into multiple",
        "multi-FastA files."],
      "see_also": ["FastA.interpose.pl","FastQ.split.pl"],
      "help_arg": "--help",
      "options": [
        {
          "opt": "--input",
          "arg": "in_file",
          "mandatory": true,
          "description": "Input FastA file."
        },
        {
          "opt": "--prefix",
          "arg": "out_file",
          "mandatory": true,
          "description": "Prefix of output FastA files."
        },
        {
          "opt": "--number",
          "arg": "integer",
          "default": 12,
          "description": "Number of output files to produce."
        },
        {
          "opt": "--zero-padded",
          "description": "Use zero-padded numbers as output index."
        },
        {
          "opt": "--lowercase-letters",
          "description": "Use lowercase letters as output index."
        },
        {
          "name": "Output format",
          "opt": "--out",
          "arg": "string",
          "default": "%s.%s.fa",
          "description": ["Format of output filenames, where %s are replaced",
            "by prefix and index."]
        },
        {
          "opt": "--quiet",
          "description": "Run quietly (no STDERR output)."
        }
      ]
    },
    {
      "task": "FastA.split.pl",
      "description": "Splits a FastA file into two or more files.",
      "warn": "Deprecated in favor of FastA.split.rb.",
      "see_also": ["FastA.split.rb","FastA.interpose.pl","FastQ.split.pl"],
      "help_arg": "",
      "options": [
        {
          "arg": "in_file",
          "mandatory": true,
          "description": "Input file in FastA format."
        },
        {
          "name": "Out base",
          "arg": "out_file",
          "mandatory": true,
          "description": ["Prefix for the name of the output files. It will be",
            "appended with .<i>.fa, where <i> is a consecutive number starting",
            "in 1."]
        },
        {
          "name": "Number of files",
          "arg": "integer",
          "default": 12,
          "description": "Number of files to generate."
        }
      ]
    },
    {
      "task": "FastA.subsample.pl",
      "description": "Subsamples a set of sequences.",
      "help_arg": "-h",
      "options": [
        {
          "name": "Fraction",
          "opt": "-f",
          "arg": "string",
          "default": "10",
          "description": ["Fraction of the library to be sampled (as",
            "percentage). It can include several values (separated by comma),",
            "as well as ranges of values in the form 'from-to/by'. For",
            "example, the -f value 1-5/1,10-50/10,75,99 will produce 12",
            "subsamples with expected fractions 1%, 2%, 3%, 4%, 5%, 10%, 20%,",
            "30%, 40%, 50%, 75%, and 99%."]
        },
        {
          "name": "Replicates",
          "opt": "-r",
          "arg": "integer",
          "default": 1,
          "description": "Number of replicates per fraction."
        },
        {
          "name": "Out base",
          "opt": "-o",
          "arg": "out_file",
          "description": ["Prefix of the output files to be created. The",
            "output files will have a suffix of the form",
            "'.fraction-replicate.fa', where 'fraction' is the percentage",
            "sampled and 'replicate' is an increasing integer for replicates",
            "of the same fraction. By default: Path to the input file."]
        },
        {
          "name": "Force",
          "opt": "-F",
          "description": "Force overwriting output file(s)."
        },
        {
          "name": "Zeroes",
          "opt": "-z",
          "description": ["Include leading zeroes in the numeric parts of the",
            "output files (e.g., file.002.50-01.fa instead of file.2.50-1.fa),",
            "so that alphabetic sorting of files reflects the sampled",
            "fraction."]
        },
        {
          "name": "Quiet",
          "opt": "-q",
          "description": "Run quietly."
        },
        {
          "arg": "in_file",
          "mandatory": true,
          "multiple_sep": " ",
          "description": "Input multi-FastA file(s)."
        }
      ]
    },
    {
      "task": "FastA.tag.rb",
      "description": "Generates easy-to-parse tagged reads from FastA files.",
      "see_also": ["FastQ.tag.rb"],
      "help_arg": "--help",
      "options": [
        {
          "name": "Input file",
          "opt": "--in",
          "arg": "in_file",
          "mandatory": true,
          "description": "FastA file containing the sequences."
        },
        {
          "name": "Output file",
          "opt": "--out",
          "arg": "out_file",
          "mandatory": true,
          "description": "FastA file to create."
        },
        {
          "opt": "--prefix",
          "arg": "string",
          "description": "Prefix to use in all IDs."
        },
        {
          "opt": "--suffix",
          "arg": "string",
          "description": "Suffix to use in all IDs."
        },
        {
          "opt": "--defline",
          "description": "Keep the original defline after a space."
        },
        {
          "opt": "--quiet",
          "description": "Run quietly (no STDERR output)."
        }
      ]
    },
    {
      "task": "FastA.per_file.pl",
      "description": ["Extracts all the sequences in a multi-FastA into",
        "multiple single-FastA files."],
      "see_also": "FastA.split.rb",
      "help_arg": "",
      "options": [
        {
          "arg": "out_dir",
          "mandatory": true,
          "description": "Output directory for the individual files."
        },
        {
          "arg": "in_file",
          "mandatory": true,
          "multiple_sep": " ",
          "description": "Input multi-FastA file(s)."
        }
      ]
    },
    {
      "task": "FastA.fragment.rb",
      "description": ["Simulates incomplete (fragmented) drafts from complete",
        "genomes."],
      "help_arg": "--help",
      "options": [
        {
          "name": "Input file",
          "opt": "--in",
          "arg": "in_file",
          "mandatory": true,
          "description": "FastA file containing the complete sequences."
        },
        {
          "name": "Output file",
          "opt": "--out",
          "arg": "out_file",
          "mandatory": true,
          "description": "FastA to create."
        },
        {
          "opt": "--completeness",
          "arg": "float",
          "mandatory": true,
          "description": ["Fraction of genome completeness to simulate from 0",
            "to 1."]
        },
        {
          "name": "Minimum length",
          "opt": "--minlen",
          "arg": "integer",
          "description": "Minimum fragment length to report.",
          "default": 500
        },
        {
          "opt": "--sorted",
          "description": ["Keep fragments sorted as in the input file. By",
            "default, fragments are shuffled."]
        },
        {
          "opt": "--quiet",
          "description": "Run quietly (no STDERR output)."
        }
      ]
    },
    {
      "task": "FastA.wrap.rb",
      "description": "Wraps sequences in a FastA to a given line length.",
      "help_arg": "--help",
      "options": [
        {
          "name": "Input FastA",
          "opt": "--in",
          "arg": "in_file",
          "mandatory": true,
          "description": "Input FastA file."
        },
        {
          "name": "Output FastA",
          "opt": "--out",
          "arg": "out_file",
          "mandatory": true,
          "description": "Output FastA file."
        },
        {
          "name": "Wrap length",
          "opt": "--wrap",
          "arg": "integer",
          "description": ["Line length to wrap sequences. Use 0 to generate",
            "1-line sequences."],
          "default": 70
        }
      ]
    }
  ]
}
